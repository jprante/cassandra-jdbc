plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.2'
}

def xbibGroup = 'org.xbib'
def xbibVersion = '3.1.1'

group = xbibGroup
version = xbibVersion

println "Current JVM: " + org.gradle.internal.jvm.Jvm.current()

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven {
        url "http://xbib.org/repository"
    }
}

configurations {
    wagon
}

dependencies {
    compile 'org.apache.cassandra:cassandra-clientutil:3.1.1'
    compile 'org.apache.cassandra:cassandra-thrift:3.1.1'
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-all:1.10.19"
    testCompile "org.apache.logging.log4j:log4j-slf4j-impl:2.5"
    testCompile "org.apache.logging.log4j:log4j-core:2.5"
    wagon 'org.apache.maven.wagon:wagon-ssh-external:2.10'
}

compileJava {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:all"
}

test {
    testLogging {
        showStandardStreams = false
        exceptionFormat = 'full'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier 'sources'
}


shadowJar {
    baseName = project.name
    classifier = 'uberjar'
}

artifacts {
    archives sourcesJar
    archives shadowJar
}

publishing {
    publications {
        shadow(MavenPublication) {
            from components.shadow
            artifactId = project.name
        }
    }
}
uploadArchives {
    repositories {
        if (project.hasProperty("xbibUsername")) {
            mavenDeployer {
                configuration = configurations.wagon
                repository(
                        id: 'xbib.org',
                        url: uri('scpexe://xbib.org/repository'),
                        authentication: [userName: xbibUsername, privateKey: xbibPrivateKey]
                )
            }
        }
    }
}
